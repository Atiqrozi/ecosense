// Generated by view binder compiler. Do not edit!
package com.dicoding.asclepius.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.dicoding.asclepius.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemNewsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView name;

  @NonNull
  public final TextView news1;

  @NonNull
  public final TextView news2;

  @NonNull
  public final RelativeLayout thumbnail;

  @NonNull
  public final ImageView thumbnailImage;

  private ItemNewsBinding(@NonNull LinearLayout rootView, @NonNull TextView name,
      @NonNull TextView news1, @NonNull TextView news2, @NonNull RelativeLayout thumbnail,
      @NonNull ImageView thumbnailImage) {
    this.rootView = rootView;
    this.name = name;
    this.news1 = news1;
    this.news2 = news2;
    this.thumbnail = thumbnail;
    this.thumbnailImage = thumbnailImage;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemNewsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemNewsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_news, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemNewsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.name;
      TextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.news1;
      TextView news1 = ViewBindings.findChildViewById(rootView, id);
      if (news1 == null) {
        break missingId;
      }

      id = R.id.news2;
      TextView news2 = ViewBindings.findChildViewById(rootView, id);
      if (news2 == null) {
        break missingId;
      }

      id = R.id.thumbnail;
      RelativeLayout thumbnail = ViewBindings.findChildViewById(rootView, id);
      if (thumbnail == null) {
        break missingId;
      }

      id = R.id.thumbnail_image;
      ImageView thumbnailImage = ViewBindings.findChildViewById(rootView, id);
      if (thumbnailImage == null) {
        break missingId;
      }

      return new ItemNewsBinding((LinearLayout) rootView, name, news1, news2, thumbnail,
          thumbnailImage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
